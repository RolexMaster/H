import ctypes
import time

class GammaFadeController:
    def __init__(self, delay=0.05):
        self.hdc = ctypes.windll.user32.GetDC(0)
        self.original_gamma = self._get_gamma_ramp()
        self.delay = delay

    def _get_gamma_ramp(self):
        ramp = (ctypes.c_ushort * 256 * 3)()
        ctypes.windll.gdi32.GetDeviceGammaRamp(self.hdc, ctypes.byref(ramp))
        return ramp

    def _set_gamma_ramp(self, ramp):
        ctypes.windll.gdi32.SetDeviceGammaRamp(self.hdc, ctypes.byref(ramp))

    def _generate_ramp(self, factor):
        ramp = (ctypes.c_ushort * 256 * 3)()
        for i in range(256):
            value = int(i * 256 * factor)
            value = min(max(value, 0), 65535)
            ramp[0][i] = ramp[1][i] = ramp[2][i] = value
        return ramp

    def fade_to_dark(self, target_factor=0.3, steps=20):
        """
        화면을 target_factor까지 어둡게 (0.0~1.0)
        예: target_factor=0.3이면 약 30% 밝기까지 어둡게
        """
        print(f"화면을 {int(target_factor*100)}% 밝기까지 어둡게 만드는 중...")
        for i in range(steps + 1):
            factor = 1.0 - (1.0 - target_factor) * (i / steps)
            ramp = self._generate_ramp(factor)
            self._set_gamma_ramp(ramp)
            time.sleep(self.delay)

    def restore(self, steps=20):
        """화면 밝기 복원"""
        print("화면 밝기를 복원하는 중...")
        for i in range(steps + 1):
            factor = (i / steps)
            ramp = self._generate_ramp(factor)
            self._set_gamma_ramp(ramp)
            time.sleep(self.delay)
